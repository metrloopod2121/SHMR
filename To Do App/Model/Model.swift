//
//  File.swift
//  To Do App
//
//  Created by ùïÑùïíùï•ùïßùïñùï™ ‚Ñôùï†ùïïùïòùï†ùï£ùïüùïöùï™ on 20.06.2024.
//

import Foundation

struct ToDoItem {
    
    enum Importance: String {
        case unimportant = "–ù–µ–≤–∞–∂–Ω–æ"
        case regular = "–û–±—ã—á–Ω–∞—è"
        case important = "–í–∞–∂–Ω–æ"
    }
    
    let id: String
    let text: String
    let importance: Importance
    let createDate: Date
    let isComplete: Bool
    let changeDate: Date?
    let deadline: Date?
    
    init(
        id: String = UUID().uuidString,
        text: String,
        importance: Importance = .regular, 
        createDate: Date = Date(),
        isComplete: Bool = false,
        changeDate: Date? = nil,
        deadline: Date? = nil
    ) {
        self.id = id
        self.text = text
        self.importance = importance
        self.createDate = Date()
        self.isComplete = isComplete
        self.changeDate = changeDate
        self.deadline = deadline
    }
    
}


class FileCache {
    
    var ToDoItems: [String: ToDoItem] = [:]
    
    func addItem(newItem: ToDoItem) {
        ToDoItems[newItem.id] = newItem
    }
    
    func removeItem(by id: String) {
        ToDoItems.removeValue(forKey: id)
    }
    
    //__________________
    
    func jsonToString(from json: Any) -> String? {
        guard JSONSerialization.isValidJSONObject(json) else {
            print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON")
            return nil
        }

        do {
            let data = try JSONSerialization.data(withJSONObject: json, options: [.prettyPrinted])
            if let jsonString = String(data: data, encoding: .utf8) {
                return jsonString
            }
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å Data –≤ —Å—Ç—Ä–æ–∫—É")
            return nil
        } catch {
            print("–û—à–∏–±–∫–∞")
            return nil
        }
    }

    ///____________________
    
    func saveData(to fileName: String) {
        
        // –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª
        var jsonOfItems: [String] = []
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç ToDoItems –≤ JSON —Å—Ç—Ä–æ–∫—É
        for values in ToDoItems.values {
            if let jsonString = jsonToString(from: values.json) {
                jsonOfItems.append(jsonString)
            } else {
                print("–û—à–∏–±–∫–∞ - –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ JSON —Å—Ç—Ä–æ–∫—É")
                return
            }
        }
        
        // –ü–æ–ª—É—á–∞–µ–º URL —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
        let currentDirectoryPath = FileManager.default.currentDirectoryPath
        
        // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
        let filePath = (currentDirectoryPath as NSString).appendingPathComponent(fileName + ".json")
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º URL –¥–ª—è —Ñ–∞–π–ª–∞
        let fileURL = URL(fileURLWithPath: filePath)
        
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ JSON —Å—Ç—Ä–æ–∫–∏ –≤ –æ–¥–∏–Ω JSON –º–∞—Å—Å–∏–≤
        let jsonArrayString = "[" + jsonOfItems.joined(separator: ",\n") + "]"
        print(jsonArrayString)
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –¥–∞–Ω–Ω—ã–µ
        guard let data = jsonArrayString.data(using: .utf8) else {
            print("–û—à–∏–±–∫–∞ - –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å JSON —Å—Ç—Ä–æ–∫—É –≤ –¥–∞–Ω–Ω—ã–µ.")
            return
        }
        
        do {
            // –ü–æ–ª—É—á–∞–µ–º URL –∫–∞—Ç–∞–ª–æ–≥–∞ Documents
            if let documentsDirectory = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first {
                let fileURL = documentsDirectory.appendingPathComponent("data.json")
                try data.write(to: fileURL)
                print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –ø–æ –ø—É—Ç–∏: \(fileURL)")
            }
        } catch {
            print("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª: \(error)")
        }
        
    }
    
    
    func loadData() {
        
    }
    
}

// –ö–ª–∞—Å—Å FileCache
// –°–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–∫—Ä—ã—Ç—É—é –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –Ω–æ –æ—Ç–∫—Ä—ã—Ç—É—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏—é TodoItem
// –°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
// –°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ (–Ω–∞ –æ—Å–Ω–æ–≤–µ id)
// –°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –¥–µ–ª –≤ —Ñ–∞–π–ª
// –°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –¥–µ–ª –∏–∑ —Ñ–∞–π–ª–∞
// –ú–æ–∂–µ–º –∏–º–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
// –ü—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º –∑–∞—â–∏—Ç—ã –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á (—Å—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ–º id)
